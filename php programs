ANSWER :01

<?php
$capital = 67;
print("Variable capital is $capital");
print("Variable CaPiTaL is $CaPiTaL");
?>

OUTPUT:

=== Code Execution Successful ===

ANSWER02
<!DOCTYPE html>
<html>
<head>
    <title>Division Table</title>
    <style>
        table, th, td {
            border: 1px solid black;
            border-collapse: collapse;
            text-align: center;
            padding: 10px;
        }
    </style>
</head>
<body>

<h3>Division Table</h3>
<table>
    <tr>
        <th></th>
        <?php
        // Column headers
        for ($col = 1; $col <= 3; $col++) {
            echo "<th>$col</th>";
        }
        ?>
    </tr>

    <?php
    // Rows
    for ($row = 1; $row <= 3; $row++) {
        echo "<tr>";
        echo "<th>$row</th>"; // Row header

        for ($col = 1; $col <= 3; $col++) {
            $result = $row / $col;
            echo "<td>" . round($result, 2) . "</td>";
        }

        echo "</tr>";
    }
    ?>
</table>

</body>
</html>


OUTPUT:

=== Code Execution Successful ===


Answer : 4

$animal = "antelope";
$animal_heads = 1;
$animal_legs = 4;
echo "The $animal has $animal_heads head(s).";
echo "The $animal has $animal_legs leg(s).";


OUTPUT:


$animal = "antelope";
$animal_heads = 1;
$animal_legs = 4;
echo "The $animal has $animal_heads head(s).";
echo "The $animal has $animal_legs leg(s).";


=== Code Execution Successful ===


Answer : 5

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Purchase Calculator</title>
</head>
<body>
    <h1>Calculate Total Cost</h1>
    <form method="post" action="">
        <?php for ($i = 1; $i <= 3; $i++): ?>
            <fieldset>
                <legend>Item <?= $i ?></legend>
                <label> Price:
                    <input type="number" name="price<?= $i ?>" step="0.01" min="0" required>
                </label>
                <label> Quantity:
                    <input type="number" name="quantity<?= $i ?>" min="0" required>
                </label>
            </fieldset>
            <br>
        <?php endfor; ?>
        <input type="submit" value="Calculate">
    </form>

    <?php
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $subtotal = 0.0;

        for ($i = 1; $i <= 3; $i++) {
            $price = floatval($_POST["price{$i}"]);
            $qty   = intval($_POST["quantity{$i}"]);
            $subtotal += $price * $qty;
        }

        $tax = $subtotal * 0.10; // 10%
        $total = $subtotal + $tax;
        ?>
        <h2>Results:</h2>
        <p>Subtotal: ₹<?php echo number_format($subtotal, 2); ?></p>
        <p>Tax (10%): ₹<?php echo number_format($tax, 2); ?></p>
        <p><strong>Total Cost: ₹<?php echo number_format($total, 2); ?></strong></p>
    <?php } ?>
</body>
</html>


OUTPUT:

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Purchase Calculator</title>
</head>
<body>
    <h1>Calculate Total Cost</h1>
    <form method="post" action="">
                    <fieldset>
                <legend>Item 1</legend>
                <label> Price:
                    <input type="number" name="price1" step="0.01" min="0" required>
                </label>
                <label> Quantity:
                    <input type="number" name="quantity1" min="0" required>
                </label>
            </fieldset>
            <br>
                    <fieldset>
                <legend>Item 2</legend>
                <label> Price:
                    <input type="number" name="price2" step="0.01" min="0" required>
                </label>
                <label> Quantity:
                    <input type="number" name="quantity2" min="0" required>
                </label>
            </fieldset>
            <br>
                    <fieldset>
                <legend>Item 3</legend>
                <label> Price:
                    <input type="number" name="price3" step="0.01" min="0" required>
                </label>
                <label> Quantity:
                    <input type="number" name="quantity3" min="0" required>
                </label>
            </fieldset>
            <br>
                <input type="submit" value="Calculate">
    </form>

    
Warning: Undefined array key "REQUEST_METHOD" in /tmp/nkO0jm2qfi/main.php on line 26
</body>
</html>


=== Code Execution Successful ===


ANSWER : 6


<?php
echo "Name: " . htmlspecialchars($_GET['username']) . "<br>";
echo "Age: " . (int)$_GET['age'];

OUTPUT :

=== Code Execution Successful ===


ANSWER : 7

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Greeting Form</title>
    <style>
        .error { color: red; }
    </style>
</head>
<body>
    <?php
    $name = "";
    $error = "";

    if ($_SERVER["REQUEST_METHOD"] === "POST") {
        $name = trim($_POST['name'] ?? '');

        if (empty($name)) {
            $error = "Please enter your name.";
        } else {
            $safeName = htmlspecialchars($name, ENT_QUOTES, 'UTF-8');
            echo "<h2>Hello, Welcome to {$safeName}!</h2>";
            echo "<p>Have a nice day!!</p>";
            // Stop further rendering of the form
            exit;
        }
    }
    ?>

    <h1>Greeting Form</h1>
    <form method="post" action="">
        <label for="name">Enter your name:</label><br>
        <input type="text" name="name" id="name" value="<?php echo htmlspecialchars($name); ?>">
        <span class="error"><?php echo $error; ?></span><br><br>
        <button type="submit">Submit</button>
    </form>
</body>
</html>

OUTPUT : 

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Greeting Form</title>
    <style>
        .error { color: red; }
    </style>
</head>
<body>
    
Warning: Undefined array key "REQUEST_METHOD" in /tmp/5bmMdm5lrk/main.php on line 15

    <h1>Greeting Form</h1>
    <form method="post" action="">
        <label for="name">Enter your name:</label><br>
        <input type="text" name="name" id="name" value="">
        <span class="error"></span><br><br>
        <button type="submit">Submit</button>
    </form>
</body>
</html>


=== Code Execution Successful ===

ANSWER : 8

<?php
/**
 * Compares two drinks by their unit price and outputs which is more cost-effective.
 *
 * @param float $priceA Cost of Drink A.
 * @param float $sizeA  Size (unit volume) of Drink A.
 * @param float $priceB Cost of Drink B.
 * @param float $sizeB  Size (unit volume) of Drink B.
 */
function deal($priceA, $sizeA, $priceB, $sizeB) {
    $unitPriceA = $priceA / $sizeA;  // Cost per unit for Drink A
    $unitPriceB = $priceB / $sizeB;  // Cost per unit for Drink B

    echo "Drink A: ₹{$priceA} for {$sizeA} units → ₹" . number_format($unitPriceA, 2) . " per unit.<br>";
    echo "Drink B: ₹{$priceB} for {$sizeB} units → ₹" . number_format($unitPriceB, 2) . " per unit.<br>";

    if ($unitPriceA < $unitPriceB) {
        echo "<strong>Drink A is the better deal—it costs less per unit.</strong>";
    } elseif ($unitPriceB < $unitPriceA) {
        echo "<strong>Drink B is the better deal—it costs less per unit.</strong>";
    } else {
        echo "<strong>Both drinks offer the same value.</strong>";
    }
}

// Example usage
deal(25, 11, 23, 9);


OUTPUT : 

Drink A: ₹25 for 11 units → ₹2.27 per unit.<br>Drink B: ₹23 for 9 units → ₹2.56 per unit.<br><strong>Drink A is the better deal—it costs less per unit.</strong>

=== Code Execution Successful ===

ANSWER : 9

$this = "this";
$that = "that";
$the_other = 2.2000000000;
print("$this,$not_set,$that+$the_other");

OUTPUT : 

this, ,that+2.2

ANSWER : 10

<?php
// Sample marks for students
$studentMarks = [95, 67, 45, 89, 32, 78];

// Define grade thresholds
function getGrade($marks) {
    if ($marks >= 90) {
        return 'A';
    } elseif ($marks >= 80) {
        return 'B';
    } elseif ($marks >= 60) {
        return 'C';
    } elseif ($marks >= 33) {
        return 'D';
    } else {
        return 'F';
    }
}

echo "<h2>Student Grades:</h2>";
foreach ($studentMarks as $index => $marks) {
    $grade = getGrade($marks);
    echo "Student " . ($index + 1) . ": Marks = $marks → Grade = <strong>$grade</strong><br>";
}
?>


OUTPUT : 

<h2>Student Grades:</h2>Student 1: Marks = 95 → Grade = <strong>A</strong><br>Student 2: Marks = 67 → Grade = <strong>C</strong><br>Student 3: Marks = 45 → Grade = <strong>D</strong><br>Student 4: Marks = 89 → Grade = <strong>B</strong><br>Student 5: Marks = 32 → Grade = <strong>F</strong><br>Student 6: Marks = 78 → Grade = <strong>C</strong><br>

=== Code Execution Successful ===


AMSWER : 11

<?php
// You can change this value for testing (1–7)
$dayNumber = 5;

switch ($dayNumber) {
    case 1:
        echo "Monday";
        break;
    case 2:
        echo "Tuesday";
        break;
    case 3:
        echo "Wednesday";
        break;
    case 4:
        echo "Thursday";
        break;
    case 5:
        echo "Friday";
        break;
    case 6:
        echo "Saturday";
        break;
    case 7:
        echo "Sunday";
        break;
    default:
        echo "Invalid day number!";
        break;
}
?>


OUTPUT : 

Friday

=== Code Execution Successful ===


ANSWER : 12

<?php
/**
 * gradeEvaluator() - Returns grade string based on percentage.
 *
 * @param float $marks Percentage marks (0–100).
 * @return string Grade message.
 */
function gradeEvaluator($marks) {
    switch (true) {
        case ($marks >= 75):
            return "First Class";
        case ($marks >= 60):
            return "Second Class";
        case ($marks >= 40):
            return "Third Class";
        default:
            return "Fail";
    }
}

// Example usage:
$studentMarks = [82, 67.5, 55, 38, 92];  // Sample percentages
foreach ($studentMarks as $index => $marks) {
    $grade = gradeEvaluator($marks);
    echo "Student " . ($index + 1) . ": Marks = {$marks}% → Grade = **{$grade}**<br>";
}
?>


OUTPUT : 

Student 1: Marks = 82% → Grade = **First Class**<br>Student 2: Marks = 67.5% → Grade = **Second Class**<br>Student 3: Marks = 55% → Grade = **Third Class**<br>Student 4: Marks = 38% → Grade = **Fail**<br>Student 5: Marks = 92% → Grade = **First Class**<br>

=== Code Execution Successful ===

ANSWER : 13
<?php
// The snippet in question:
$sub = substr(12345, 2, 2);
echo "sub is $sub";
?>


OUTPUT : 

sub is 34

=== Code Execution Successful ===


ANSWER : 14

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Contact — Form with Inline Confirmation</title>
  <style>
    :root {
      --maxw: 520px;
      --radius: 10px;
      --gap: 14px;
      --muted: #6b7280;
    }
    body {
      font-family: Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
      display: flex;
      align-items: center;
      justify-content: center;
      min-height: 100vh;
      margin: 0;
      background: linear-gradient(180deg,#f7fafc,#fff);
      padding: 24px;
    }
    .card {
      width: 100%;
      max-width: var(--maxw);
      background: #ffffff;
      border-radius: var(--radius);
      box-shadow: 0 6px 24px rgba(11,22,39,0.06);
      padding: 22px;
      box-sizing: border-box;
    }
    h1 { margin: 0 0 8px 0; font-size: 1.25rem; }
    p.lead { margin: 0 0 18px 0; color: var(--muted); font-size: 0.95rem; }
    label { display:block; margin-top: var(--gap); font-weight: 600; font-size: 0.9rem; }
    input[type="text"], input[type="email"], textarea {
      width: 100%;
      padding: 10px 12px;
      margin-top: 6px;
      border-radius: 8px;
      border: 1px solid #e6e9ef;
      font-size: 0.95rem;
      box-sizing: border-box;
      outline: none;
    }
    textarea { min-height: 110px; resize: vertical; }
    .actions { margin-top: 16px; display:flex; gap:10px; align-items:center; }
    button {
      padding: 10px 14px;
      border-radius: 9px;
      border: none;
      cursor: pointer;
      background: #0f62fe;
      color: white;
      font-weight: 600;
      font-size: 0.95rem;
    }
    button[disabled] { opacity: 0.6; cursor: not-allowed; }
    .confirmation {
      margin-top: 16px;
      padding: 14px;
      border-radius: 8px;
      background: #f0fdf4;
      border: 1px solid #bbf7d0;
      display: none;
    }
    .error { color: #b91c1c; font-size: 0.9rem; margin-top:8px; display:none; }
    .small { color: var(--muted); font-size: 0.9rem; margin-left: auto; }
  </style>
</head>
<body>
  <main class="card" role="main" aria-labelledby="contactTitle">
    <h1 id="contactTitle">Contact us</h1>
    <p class="lead">Send us a quick message — we'll show a confirmation on this page when you submit.</p>

    <form id="contactForm" novalidate>
      <label for="name">Name</label>
      <input id="name" name="name" type="text" autocomplete="name" required />

      <label for="email">Email</label>
      <input id="email" name="email" type="email" autocomplete="email" required />

      <label for="message">Message</label>
      <textarea id="message" name="message" required></textarea>

      <div class="actions" aria-hidden="false">
        <button id="sendBtn" type="submit">Send message</button>
        <div class="small">All fields required</div>
      </div>

      <div id="error" class="error" role="alert"></div>
    </form>

    <div id="confirmation" class="confirmation" role="status" aria-live="polite">
      <!-- Filled dynamically -->
    </div>
  </main>

  <script>
    (function () {
      const form = document.getElementById('contactForm');
      const nameInput = document.getElementById('name');
      const emailInput = document.getElementById('email');
      const messageInput = document.getElementById('message');
      const errorDiv = document.getElementById('error');
      const confirmationDiv = document.getElementById('confirmation');
      const sendBtn = document.getElementById('sendBtn');

      function showError(msg) {
        errorDiv.textContent = msg;
        errorDiv.style.display = 'block';
        confirmationDiv.style.display = 'none';
      }
      function clearError() {
        errorDiv.style.display = 'none';
        errorDiv.textContent = '';
      }

      function sanitize(text) {
        // minimal client-side sanitization for display (prevents raw HTML injection)
        return text.replace(/[&<>"']/g, function (m) {
          return ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":"&#39;"}[m]);
        });
      }

      form.addEventListener('submit', function (ev) {
        ev.preventDefault();
        clearError();

        const name = nameInput.value.trim();
        const email = emailInput.value.trim();
        const message = messageInput.value.trim();

        // simple client-side validation
        if (!name || !email || !message) {
          showError('Please fill in all fields.');
          return;
        }
        // basic email format check
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(email)) {
          showError('Please enter a valid email address.');
          return;
        }

        // Simulate sending — in a real app you'd POST to a server here.
        sendBtn.disabled = true;
        sendBtn.textContent = 'Sending...';

        // Simulate a short delay to mimic network latency.
        setTimeout(() => {
          // Show confirmation on the same page
          const safeName = sanitize(name);
          const safeEmail = sanitize(email);

          confirmationDiv.innerHTML = `
            <strong>Thanks, ${safeName} — your message was received.</strong>
            <div style="margin-top:8px;">A confirmation was sent to <em>${safeEmail}</em>.</div>
            <div style="margin-top:8px; color: #374151;">(Message preview: ${sanitize(message).slice(0, 200)}${message.length>200?'…':''})</div>
            <div style="margin-top:10px;">
              <button id="sendAnother" type="button">Send another message</button>
            </div>
          `;
          confirmationDiv.style.display = 'block';
          form.style.display = 'none';

          // re-enable button in case user comes back
          sendBtn.disabled = false;
          sendBtn.textContent = 'Send message';

          // wire up "send another"
          document.getElementById('sendAnother').addEventListener('click', () => {
            form.reset();
            form.style.display = '';
            confirmationDiv.style.display = 'none';
            nameInput.focus();
          });
        }, 700);
      });
    })();
  </script>
</body>
</html>


ANSWER : 15
<?php
function sumDigitsByMath($number) {
    $sum = 0;
    while ($number != 0) {
        $sum += $number % 10;
        $number = (int)($number / 10);
    }
    return $sum;
}

// Example usage:
echo sumDigitsByMath(76534); // Outputs: 25
?>

OUTPUT :
25

=== Code Execution Successful ===







